name: CI
on:
  pull_request:
    branches:
      - master

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      # Checkout to depth 2 so we can see what changed
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      # Cache Flow: https://stackoverflow.com/a/62244232
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-nodemodules-
      - run: yarn install --frozen-lockfile --prefer-offline
        if: |
          steps.cache-yarn-cache.outputs.cache-hit == 'true' ||
          steps.cache-node-modules.outputs.cache-hit == 'true'
      - run: yarn install --frozen-lockfile

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v1
          with:
            node-version: 14.x
        # Cache Flow: https://stackoverflow.com/a/62244232
        - name: Get yarn cache directory path
          id: yarn-cache-dir-path
          run: echo "::set-output name=dir::$(yarn cache dir)"
        - name: Cache yarn cache
          uses: actions/cache@v2
          id: cache-yarn-cache
          with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-
        - name: Cache node_modules
          id: cache-node-modules
          uses: actions/cache@v2
          with:
            path: node_modules
            key: ${{ runner.os }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-nodemodules-
        - run: yarn install --frozen-lockfile --prefer-offline
          if: |
            steps.cache-yarn-cache.outputs.cache-hit == 'true' ||
            steps.cache-node-modules.outputs.cache-hit == 'true'
        - run: yarn install --frozen-lockfile
          if: |
            steps.cache-yarn-cache.outputs.cache-hit != 'true' &&
            steps.cache-node-modules.outputs.cache-hit != 'true'
        # --base=master and --head=HEAD are the default arguments, but keeping here for posterity
        - run: yarn nx affected:test --base=master --head=HEAD

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      # Cache Flow: https://stackoverflow.com/a/62244232
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-nodemodules-
      - run: yarn install --frozen-lockfile --prefer-offline
        if: |
          steps.cache-yarn-cache.outputs.cache-hit == 'true' ||
          steps.cache-node-modules.outputs.cache-hit == 'true'
      - run: yarn install --frozen-lockfile
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' &&
          steps.cache-node-modules.outputs.cache-hit != 'true'
      # --base=master and --head=HEAD are the default arguments, but keeping here for posterity
      - run: yarn nx workspace-lint
