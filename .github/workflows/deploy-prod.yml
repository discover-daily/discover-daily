name: Deploy Prod
on:
  push:
    branches:
      - master
jobs:
  build_affected:
    name: Build Affected
    runs-on: ubuntu-latest
    outputs:
      affected_apps: ${{ steps.affected_apps.outputs.apps }}
    steps:
      # Checkout to depth 2 so we can see what changed
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      # Cache Flow: https://stackoverflow.com/a/62244232
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-nodemodules-
      - run: yarn install --frozen-lockfile --prefer-offline
        if: |
          steps.cache-yarn-cache.outputs.cache-hit == 'true' ||
          steps.cache-node-modules.outputs.cache-hit == 'true'
      - run: yarn install --frozen-lockfile
      # Compare the current branch to the parent of the current branch. In a merge commit this should compare the
      # first commit before the merge commit and the current state of the branch, giving us what changed.
      - run: yarn nx affected:build --base=HEAD^
      - name: Store build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: apps
          path: dist/apps
      # Only the first line is saved but we want the third line
      - name: Output affected
        id: affected_apps
        run: echo "::set-output name=apps::$(yarn nx affected:apps --base=HEAD^ --plain | head -n3 | tail -n1)"

  deploy_frontend:
    runs-on: ubuntu-latest
    needs: build_affected
    name: Deploy Frontend
    if: contains(needs.build_affected.outputs.affected_apps, 'discover-daily')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Restore  built apps
        uses: actions/download-artifact@v2
        with:
          name: apps
          path: dist/apps
      - name: Build Frontend Dockerfile and push
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: discoverdaily/frontend
          tags: latest
          tag_with_sha: true
          dockerfile: caprover/discover-daily/Dockerfile
      - name: Install Caprover
        run: |
          yarn global add caprover
          echo "::add-path::$(yarn global bin)"
      - name: Caprover Deploy
        env:
          CAPROVER_URL: captain.caprover.josiahdahl.com
          CAPROVER_PASSWORD: ${{ secrets.CAPROVER_PASSWORD }}
          CAPROVER_NAME: captain-01
        run: caprover deploy -i discoverdaily/frontend:latest -n "${CAPROVER_NAME}" -a discover-daily

  deploy_api:
    name: Deploy API
    runs-on: ubuntu-latest
    needs: build_affected
    if: contains(needs.build_affected.outputs.affected_apps, 'api')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn cache for deploy
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-deploy-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-deploy-
      - name: Cache node_modules for deploy
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-nodemodules-deploy-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-nodemodules-deploy-
      - name: Install deploy dependencies only
        run: yarn install --production --ignore-scripts --prefer-offline
      - name: Restore  built apps
        uses: actions/download-artifact@v2
        with:
          name: apps
          path: dist/apps
      - name: Build API Dockerfile and push
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: discoverdaily/api
          tags: latest
          tag_with_sha: true
          dockerfile: caprover/api/Dockerfile
      - name: Install Caprover
        run: |
          yarn global add caprover
          echo "::add-path::$(yarn global bin)"
      - name: Caprover Deploy
        env:
          CAPROVER_URL: captain.caprover.josiahdahl.com
          CAPROVER_PASSWORD: ${{ secrets.CAPROVER_PASSWORD }}
          CAPROVER_NAME: captain-01
        run: caprover deploy -i discoverdaily/api:latest -n "${CAPROVER_NAME}" -a discover-daily-api
